/*
 * Copyright (c) Institute for System Programming of the Russian Academy of Sciences
 * All Rights Reserved
 *
 * Institute for System Programming of the Russian Academy of Sciences (ISP RAS)
 * 25 Alexander Solzhenitsyn st., Moscow, 109004, Russia
 * http://www.ispras.ru
 *
 * The present file was automatically generated on the basis of formal specifications.
 * It is distributed under the same terms and conditions as the derived specifications.
 *
 * N.B. PLEASE DO NOT MODIFY THIS FILE.
 */

package ru.ispras.microtesk.model.x86.metadata;

import static ru.ispras.microtesk.model.x86.TypeDefs.*;

import ru.ispras.microtesk.model.ArgumentMode;
import ru.ispras.microtesk.model.metadata.MetaArgument;
import ru.ispras.microtesk.model.metadata.MetaOperation;
import ru.ispras.microtesk.model.data.Type;

/**
 * The {@code push_rseg} class is automatically generated by MicroTESK.
 *
 * @author <a href="mailto:microtesk-support@ispras.ru">MicroTESK</a>
 */
public final class push_rseg extends MetaOperation {
  private static push_rseg instance = null;

  public static push_rseg get() {
    if (null == instance) {
      instance = new push_rseg();
    }
    return instance;
  }

  private push_rseg() {
    super(
        "push_rseg",
        "push_rseg",
        false,
        false,
        false,
        false,
        false,
        true,
        8
        );
    addArgument(new MetaArgument("src", RSEG16.get(), ArgumentMode.IN));

    addShortcut("#root", instruction_push_rseg.get());
  }

  private static final class instruction_push_rseg extends MetaOperation {
    private static instruction_push_rseg instance = null;

    public static instruction_push_rseg get() {
      if (null == instance) {
        instance = new instruction_push_rseg();
      }
      return instance;
    }

    private instruction_push_rseg() {
      super(
          "push_rseg",
          "instruction",
          true,
          true,
          true,
          false,
          false,
          true,
          8
          );
      addArgument(new MetaArgument("src", RSEG16.get(), ArgumentMode.IN));
    }
  }
}
