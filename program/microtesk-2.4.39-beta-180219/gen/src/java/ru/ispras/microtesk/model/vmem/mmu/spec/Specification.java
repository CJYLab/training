/*
 * Copyright (c) Institute for System Programming of the Russian Academy of Sciences
 * All Rights Reserved
 *
 * Institute for System Programming of the Russian Academy of Sciences (ISP RAS)
 * 25 Alexander Solzhenitsyn st., Moscow, 109004, Russia
 * http://www.ispras.ru
 *
 * The present file was automatically generated on the basis of formal specifications.
 * It is distributed under the same terms and conditions as the derived specifications.
 *
 * N.B. PLEASE DO NOT MODIFY THIS FILE.
 */

package ru.ispras.microtesk.model.vmem.mmu.spec;

import ru.ispras.microtesk.mmu.translator.ir.spec.MmuSubsystem;

/**
 * The {@code Specification} class is automatically generated by MicroTESK.
 *
 * @author <a href="mailto:microtesk-support@ispras.ru">MicroTESK</a>
 */
public final class Specification implements MmuSubsystem.Holder {
  private final MmuSubsystem spec;

  public Specification() {
    final MmuSubsystem.Builder builder = new MmuSubsystem.Builder();

    builder.registerAddress(VA.get());
    builder.registerAddress(PA.get());

    builder.registerBuffer(PageTable.get());
    builder.registerBuffer(TLB.get());
    builder.registerBuffer(MEM.get());
    builder.registerBuffer(L1.get());

    builder.registerSegment(DIRECT.get());
    builder.registerSegment(MAPPED.get());

    final vmem vmem = new vmem(builder);

    builder.setVirtualAddress(VA.get());
    builder.setPhysicalAddress(PA.get());
    builder.setStartAction(vmem.START);
    builder.setTargetBuffer(MEM.get());

    this.spec = builder.build();
  }

  @Override
  public MmuSubsystem getSpecification() {
    return spec;
  }

  public static void main(final String[] args) {
    System.out.println(new Specification().getSpecification());
  }
}
