/*
 * Copyright (c) Institute for System Programming of the Russian Academy of Sciences
 * All Rights Reserved
 *
 * Institute for System Programming of the Russian Academy of Sciences (ISP RAS)
 * 25 Alexander Solzhenitsyn st., Moscow, 109004, Russia
 * http://www.ispras.ru
 *
 * The present file was automatically generated on the basis of formal specifications.
 * It is distributed under the same terms and conditions as the derived specifications.
 *
 * N.B. PLEASE DO NOT MODIFY THIS FILE.
 */

package ru.ispras.microtesk.model.vmem.metadata;

import static ru.ispras.microtesk.model.vmem.TypeDefs.*;

import java.math.BigInteger;
import ru.ispras.microtesk.model.data.Type;
import ru.ispras.microtesk.model.metadata.MetaModel;
import ru.ispras.microtesk.model.metadata.MetaModelBuilder;

/**
 * The {@code MetaModelFactory} class is automatically generated by MicroTESK.
 *
 * @author <a href="mailto:microtesk-support@ispras.ru">MicroTESK</a>
 */
public final class MetaModelFactory {
  private MetaModelFactory() {}

  public static MetaModel newMetaModel() {
    final MetaModelBuilder builder = new MetaModelBuilder();

    builder.addRegister("GPR", HWORD, 16);
    builder.addRegister("PC", HWORD, 1);

    builder.addMemory("MEM", HWORD, 0x2000);

    builder.addMode(REG.get());

    builder.addOperation(nop.get());
    builder.addOperation(ml.get());
    builder.addOperation(mh.get());
    builder.addOperation(ld.get());
    builder.addOperation(st.get());
    builder.addOperation(command.get());
    builder.addOperation(instruction.get());

    return builder.build();
  }
}
