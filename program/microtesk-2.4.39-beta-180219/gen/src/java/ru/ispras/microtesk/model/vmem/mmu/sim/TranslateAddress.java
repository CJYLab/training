/*
 * Copyright (c) Institute for System Programming of the Russian Academy of Sciences
 * All Rights Reserved
 *
 * Institute for System Programming of the Russian Academy of Sciences (ISP RAS)
 * 25 Alexander Solzhenitsyn st., Moscow, 109004, Russia
 * http://www.ispras.ru
 *
 * The present file was automatically generated on the basis of formal specifications.
 * It is distributed under the same terms and conditions as the derived specifications.
 *
 * N.B. PLEASE DO NOT MODIFY THIS FILE.
 */

package ru.ispras.microtesk.model.vmem.mmu.sim;

import java.math.BigInteger;
import ru.ispras.fortress.data.types.bitvector.*;
import ru.ispras.microtesk.model.Execution;

/**
 * The {@code TranslateAddress} class is automatically generated by MicroTESK.
 *
 * @author <a href="mailto:microtesk-support@ispras.ru">MicroTESK</a>
 */
public final class TranslateAddress {
  public static PA call(
    final VA va) {
    final PA pa = new PA();

    if (!va.value.field(0, 0).equals(BitVector.valueOf(0x0, 1))) {
      Execution.exception("AddressError");
    }
    if (DIRECT.get().isHit(va)) {
      pa.assign(DIRECT.get().getData(va));
      Execution.trace("TranslateAddress: DIRECT(%s)=%s", va.value.toHexString(), pa.value.toHexString());
    } else if (MAPPED.get().isHit(va)) {
      pa.assign(MAPPED.get().getData(va));
      Execution.trace("TranslateAddress: MAPPED(%s)=%s", va.value.toHexString(), pa.value.toHexString());
    } else {
      Execution.exception("AddressError");
    }
    return pa;
  }
}
