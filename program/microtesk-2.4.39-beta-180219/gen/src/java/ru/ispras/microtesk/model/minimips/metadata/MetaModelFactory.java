/*
 * Copyright (c) Institute for System Programming of the Russian Academy of Sciences
 * All Rights Reserved
 *
 * Institute for System Programming of the Russian Academy of Sciences (ISP RAS)
 * 25 Alexander Solzhenitsyn st., Moscow, 109004, Russia
 * http://www.ispras.ru
 *
 * The present file was automatically generated on the basis of formal specifications.
 * It is distributed under the same terms and conditions as the derived specifications.
 *
 * N.B. PLEASE DO NOT MODIFY THIS FILE.
 */

package ru.ispras.microtesk.model.minimips.metadata;

import static ru.ispras.microtesk.model.minimips.TypeDefs.*;

import java.math.BigInteger;
import ru.ispras.microtesk.model.data.Type;
import ru.ispras.microtesk.model.metadata.MetaModel;
import ru.ispras.microtesk.model.metadata.MetaModelBuilder;

/**
 * The {@code MetaModelFactory} class is automatically generated by MicroTESK.
 *
 * @author <a href="mailto:microtesk-support@ispras.ru">MicroTESK</a>
 */
public final class MetaModelFactory {
  private MetaModelFactory() {}

  public static MetaModel newMetaModel() {
    final MetaModelBuilder builder = new MetaModelBuilder();

    builder.addRegister("GPR", WORD, 32);
    builder.addRegister("COP0_R", WORD, 32);
    builder.addRegister("HI", WORD, 1);
    builder.addRegister("LO", WORD, 1);
    builder.addRegister("CIA", WORD, 1);
    builder.addRegister("CIA_COPY", WORD, 1);
    builder.addRegister("PID", WORD, 1);
    builder.addRegister("BRANCH", BIT, 1);
    builder.addRegister("JMPADDR", WORD, 1);
    builder.addRegister("MMU_PA", WORD, 1);

    builder.addMemory("M", WORD, 0x40000000);

    builder.addMode(REG.get());
    builder.addMode(RCOP0.get());
    builder.addMode(BRANCH_LABEL.get());
    builder.addMode(BRANCH_IMM.get());
    builder.addMode(BRANCH_OFFSET.get());
    builder.addMode(JUMP_LABEL.get());
    builder.addMode(JUMP_IMM.get());
    builder.addMode(JUMP_ADDR.get());
    builder.addMode(LA_ADDR.get());

    builder.addOperation(add.get());
    builder.addOperation(addi.get());
    builder.addOperation(addu.get());
    builder.addOperation(addiu.get());
    builder.addOperation(sub.get());
    builder.addOperation(subu.get());
    builder.addOperation(mult.get());
    builder.addOperation(multu.get());
    builder.addOperation(and.get());
    builder.addOperation(andi.get());
    builder.addOperation(or.get());
    builder.addOperation(ori.get());
    builder.addOperation(nor.get());
    builder.addOperation(xor.get());
    builder.addOperation(xori.get());
    builder.addOperation(sll.get());
    builder.addOperation(sllv.get());
    builder.addOperation(sra.get());
    builder.addOperation(srav.get());
    builder.addOperation(srl.get());
    builder.addOperation(srlv.get());
    builder.addOperation(lui.get());
    builder.addOperation(lw.get());
    builder.addOperation(sw.get());
    builder.addOperation(mfhi.get());
    builder.addOperation(mflo.get());
    builder.addOperation(mthi.get());
    builder.addOperation(mtlo.get());
    builder.addOperation(swc0.get());
    builder.addOperation(lwc0.get());
    builder.addOperation(mfc0.get());
    builder.addOperation(mtc0.get());
    builder.addOperation(beq.get());
    builder.addOperation(bgez.get());
    builder.addOperation(bgezal.get());
    builder.addOperation(bgtz.get());
    builder.addOperation(blez.get());
    builder.addOperation(bltz.get());
    builder.addOperation(bltzal.get());
    builder.addOperation(bne.get());
    builder.addOperation(slt.get());
    builder.addOperation(slti.get());
    builder.addOperation(sltiu.get());
    builder.addOperation(sltu.get());
    builder.addOperation(j.get());
    builder.addOperation(jr.get());
    builder.addOperation(jal.get());
    builder.addOperation(jalr.get());
    builder.addOperation(syscall.get());
    builder.addOperation(cop0.get());
    builder.addOperation(mips_break.get());
    builder.addOperation(nop.get());
    builder.addOperation(arithm.get());
    builder.addOperation(arithmi.get());
    builder.addOperation(multiply.get());
    builder.addOperation(bitwise.get());
    builder.addOperation(bitwisei.get());
    builder.addOperation(shift.get());
    builder.addOperation(shifti.get());
    builder.addOperation(alu.get());
    builder.addOperation(alui.get());
    builder.addOperation(Operations.get());
    builder.addOperation(la.get());
    builder.addOperation(instantiate.get());

    return builder.build();
  }
}
